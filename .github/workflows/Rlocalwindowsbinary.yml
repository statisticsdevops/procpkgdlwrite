name: R Windows Binary Setup

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Step 1: Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Create virtual environment
      run: |
        if (Test-Path venv) {
          Remove-Item -Recurse -Force venv
        }
        python -m venv venv
        .\venv\Scripts\activate

    - name: Force reinstall pip
      run: |
        .\venv\Scripts\activate
        python -m pip install --upgrade pip

    - name: Install required Python packages
      run: |
        .\venv\Scripts\activate
        pip install pandas openpyxl

    - name: Split R requirements based on users
      run: |
        .\venv\Scripts\activate
        python ./genrlocalreq.py

    - name: Set up R 4.2.0
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.2.0'

    - name: Install required R packages
      run: |
        Rscript -e "install.packages(c('remotes'), repos='https://cran.rstudio.com/')"

    - name: Download R packages dynamically
      run: |
        mkdir r_packages
        
        foreach ($userDir in Get-ChildItem -Directory) {
          $requirementsFile = "$($userDir.FullName)/requirements_rlocal.txt" -replace '\\', '/'
          if (Test-Path $requirementsFile) {
            echo "Processing $($userDir.FullName)'s R packages..."
            Rscript -e "packages <- scan('$requirementsFile', what='', sep=''); deps <- tools::package_dependencies(packages, available.packages(), which=c('Depends', 'Imports', 'LinkingTo'), recursive=TRUE); all_packages <- unique(c(packages, unlist(deps))); download.packages(all_packages, destdir='r_packages', type='win.binary')"
          }
        }

    - name: Upload R packages
      uses: actions/upload-artifact@v4
      with:
        name: r-packages-bin
        path: r_packages_bin/
